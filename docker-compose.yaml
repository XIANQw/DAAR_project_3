version: '3.8'

services:
  db:
    restart: always
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres_data/sub:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432

  elasticsearch:
    restart: always
    image: elasticsearch:7.9.3
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es-node
      - cluster.name=es-docker-cluster
      - discovery.type=single-node

  web:
    restart: always
    build:
      context: ./django_app
    command: [ "./wait-for-it/wait-for-it.sh","${POSTGRES_HOST}:${POSTGRES_PORT}","--","./wait-for-it/wait-for-it.sh","${ES_HOST}:${ES_PORT}","--","python", "manage.py","runserver","0.0.0.0:8000" ]
    environment:
      DOCKER: "True"
      DEBUG: ${DJANGO_DEBUG}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
    volumes:
      #      - ./django_data/media:/app/media
      - ./django_app/media:/app/media
    ports:
      - ${DJANGO_PORT}:8000
    links:
      - db:${POSTGRES_HOST}
      - elasticsearch:${ES_HOST}
    depends_on:
      - db
      - elasticsearch
